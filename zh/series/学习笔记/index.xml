<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" 
  xmlns:content="http://purl.org/rss/1.0/modules/content/" 
  xmlns:dc="http://purl.org/dc/elements/1.1/" 
  xmlns:atom="http://www.w3.org/2005/Atom" 
  xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" 
  xmlns:media="http://search.yahoo.com/mrss/">
  <channel>
    <title>学习笔记 on 幽梦</title>
    <link>https://ymmeng.github.io/zh/series/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</link>
    <description>Recent content in 学习笔记 on 幽梦</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <managingEditor>https://ymmengs@outlook.com (幽梦)</managingEditor>
    <webMaster>https://ymmengs@outlook.com (幽梦)</webMaster>
    <copyright>&amp;copy;{year}, All Rights Reserved</copyright>
    <lastBuildDate>Wed, 11 Aug 2021 17:25:21 +0200</lastBuildDate>
    
        <atom:link href="https://ymmeng.github.io/zh/series/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/index.xml" rel="self" type="application/rss+xml" />
    
    
    

      
      <item>
        <title>Ubuntu修复grub引导失败</title>
        <link>https://ymmeng.github.io/zh/posts/ubuntu%E4%BF%AE%E5%A4%8Dgrub%E5%BC%95%E5%AF%BC%E5%A4%B1%E8%B4%A5/</link>
        <pubDate>Wed, 11 Aug 2021 17:25:21 +0200</pubDate>
        <author>https://ymmengs@outlook.com (幽梦)</author>
        <atom:modified>Wed, 11 Aug 2021 17:25:21 +0200</atom:modified>
        <guid>https://ymmeng.github.io/zh/posts/ubuntu%E4%BF%AE%E5%A4%8Dgrub%E5%BC%95%E5%AF%BC%E5%A4%B1%E8%B4%A5/</guid>
        <description>Ubuntu修复grub引导失败 对于grub损坏是很多使用双系统的研友都会遇到的问题，如果grub损坏，最重要的后果是进不去ubuntu里面的图形化见面，但是幸运的是硬盘没有受损。大部分人遇到这种情况</description>
        
        <dc:creator>Jeus</dc:creator>
        
        
        
        
          
            
              <category>test</category>
            
          
        
        
          
            
              <category>test</category>
            
          
        
        
          
            
              <category>学习笔记</category>
            
          
        
      </item>
      
      <item>
        <title>组织接口</title>
        <link>https://ymmeng.github.io/zh/posts/%E7%BB%84%E7%BB%87%E6%8E%A5%E5%8F%A3/</link>
        <pubDate>Sun, 24 Jan 2021 19:13:44 +0800</pubDate>
        <author>https://ymmengs@outlook.com (幽梦)</author>
        <atom:modified>Sun, 24 Jan 2021 19:13:44 +0800</atom:modified>
        <guid>https://ymmeng.github.io/zh/posts/%E7%BB%84%E7%BB%87%E6%8E%A5%E5%8F%A3/</guid>
        <description>组织RPC接口 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 syntax = &amp;#34;proto3&amp;#34;;package services.org;option go_package = &amp;#34;proto;proto&amp;#34;;service orgService { rpc Org(OrgID) returns (OrgInfoResponse) {}; rpc Update(OrgUpdateRequest) returns (OrgInfoResponse); rpc Members(OrgMemberRequest) returns</description>
        
        <dc:creator>Jeus</dc:creator>
        
        
        
        
          
            
              <category>test</category>
            
          
        
        
          
            
              <category>test</category>
            
          
        
        
          
            
              <category>学习笔记</category>
            
          
        
      </item>
      
      <item>
        <title>git submodule 使用</title>
        <link>https://ymmeng.github.io/zh/posts/%E5%89%8D%E7%AB%AF/git-submodule%E4%BD%BF%E7%94%A8/</link>
        <pubDate>Fri, 11 Dec 2020 21:11:53 +0800</pubDate>
        <author>https://ymmengs@outlook.com (幽梦)</author>
        <atom:modified>Fri, 11 Dec 2020 21:11:53 +0800</atom:modified>
        <guid>https://ymmeng.github.io/zh/posts/%E5%89%8D%E7%AB%AF/git-submodule%E4%BD%BF%E7%94%A8/</guid>
        <description>演示 1 2 3 4 5 6 7 8 9 添加父亲，也就是初始化git仓库 git init 添加儿子们，添加子模块 git submodule add https:xxx.com/xxx.git 找回儿子们，因为在clone主仓库的时候，git默认是不会把子模块给clone下来，所以需要使用以下命令 git submodule update --init</description>
        
        <dc:creator>幽梦</dc:creator>
        
        
        
        
          
            
              <category>git</category>
            
          
            
              <category>submodule</category>
            
          
        
        
          
            
              <category>git</category>
            
          
        
        
          
            
              <category>学习笔记</category>
            
          
        
      </item>
      
      <item>
        <title>git submodule 使用</title>
        <link>https://ymmeng.github.io/zh/posts/%E8%BF%90%E7%BB%B4/git-submodule%E4%BD%BF%E7%94%A8/</link>
        <pubDate>Fri, 11 Dec 2020 21:11:53 +0800</pubDate>
        <author>https://ymmengs@outlook.com (幽梦)</author>
        <atom:modified>Fri, 11 Dec 2020 21:11:53 +0800</atom:modified>
        <guid>https://ymmeng.github.io/zh/posts/%E8%BF%90%E7%BB%B4/git-submodule%E4%BD%BF%E7%94%A8/</guid>
        <description>演示 1 2 3 4 5 6 7 8 9 添加父亲，也就是初始化git仓库 git init 添加儿子们，添加子模块 git submodule add https:xxx.com/xxx.git 找回儿子们，因为在clone主仓库的时候，git默认是不会把子模块给clone下来，所以需要使用以下命令 git submodule update --init</description>
        
        <dc:creator>幽梦</dc:creator>
        
        
        
        
          
            
              <category>git</category>
            
          
            
              <category>submodule</category>
            
          
        
        
          
            
              <category>git</category>
            
          
        
        
          
            
              <category>学习笔记</category>
            
          
        
      </item>
      
      <item>
        <title>传统布局和 flex 布局对比</title>
        <link>https://ymmeng.github.io/zh/posts/%E5%89%8D%E7%AB%AF/html%E4%B8%ADflex%E5%B8%83%E5%B1%80%E4%BD%BF%E7%94%A8/</link>
        <pubDate>Fri, 11 Dec 2020 21:11:53 +0800</pubDate>
        <author>https://ymmengs@outlook.com (幽梦)</author>
        <atom:modified>Fri, 11 Dec 2020 21:11:53 +0800</atom:modified>
        <guid>https://ymmeng.github.io/zh/posts/%E5%89%8D%E7%AB%AF/html%E4%B8%ADflex%E5%B8%83%E5%B1%80%E4%BD%BF%E7%94%A8/</guid>
        <description>1.0 传统布局和 flex 布局对比 1.1 传统布局 兼容性好 布局繁琐 局限性，不能再移动端很好的布局 1.2 flex 布局 操作方便，布局极其简单，移动端使用比较广泛 pc 端浏览器支持情况比较差 IE11 或更低版本不支持 flex 或仅支持部分 1.3 建议 如果是 pc 端</description>
        
        <dc:creator>幽梦</dc:creator>
        
        
        
        
          
            
              <category>flex</category>
            
          
        
        
          
            
              <category>HTML</category>
            
          
        
        
          
            
              <category>学习笔记</category>
            
          
        
      </item>
      
      <item>
        <title>提示框</title>
        <link>https://ymmeng.github.io/zh/posts/%E6%8F%90%E7%A4%BA%E6%A1%86/</link>
        <pubDate>Fri, 11 Dec 2020 21:11:53 +0800</pubDate>
        <author>https://ymmengs@outlook.com (幽梦)</author>
        <atom:modified>Fri, 11 Dec 2020 21:11:53 +0800</atom:modified>
        <guid>https://ymmeng.github.io/zh/posts/%E6%8F%90%E7%A4%BA%E6%A1%86/</guid>
        <description>提示框 使用方法 1 看起来的样子 warning, success, info, danger this is a text 框 Markdownify框 1 简单的盒子 1 折叠 1 注意 1 标签 1</description>
        
        <dc:creator>幽梦</dc:creator>
        
        
        
        
          
            
              <category>hugo</category>
            
          
        
        
          
            
              <category>hugo</category>
            
          
        
        
          
            
              <category>学习笔记</category>
            
          
        
      </item>
      
      <item>
        <title>用户模块</title>
        <link>https://ymmeng.github.io/zh/posts/%E7%94%A8%E6%88%B7%E6%A8%A1%E5%9D%97/</link>
        <pubDate>Fri, 11 Dec 2020 21:11:53 +0800</pubDate>
        <author>https://ymmengs@outlook.com (幽梦)</author>
        <atom:modified>Fri, 11 Dec 2020 21:11:53 +0800</atom:modified>
        <guid>https://ymmeng.github.io/zh/posts/%E7%94%A8%E6%88%B7%E6%A8%A1%E5%9D%97/</guid>
        <description>用户 接口 User 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 string userID通过用户的uuid查询 users 数据表获取用户的详细信息。 umeta查询后需要做链接到 umetas数据表。通过userid 来查询 umetas 的指定用户字段的所有</description>
        
        <dc:creator>幽梦</dc:creator>
        
        
        
        
          
            
              <category>git</category>
            
          
            
              <category>submodule</category>
            
          
        
        
          
            
              <category>git</category>
            
          
        
        
          
            
              <category>学习笔记</category>
            
          
        
      </item>
      

    
  </channel>
</rss>